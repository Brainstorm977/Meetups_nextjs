{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\2_Study\\\\3_JS\\\\5_Schwarzmuller\\\\5_nextjs_meetups\\\\pages\\\\[meetupId]\\\\index.jsx\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://static.dw.com/image/45716657_303.jpg\",\n    title: \"A first meetup\",\n    description: \"First Meetup\",\n    address: \"11 avenue, Prague, Chech Republic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/2_Study/3_JS/5_Schwarzmuller/5_nextjs_meetups/pages/[meetupId]/index.jsx"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,8CADP;AAEC,IAAA,KAAK,EAAC,gBAFP;AAGC,IAAA,WAAW,EAAC,cAHb;AAIC,IAAA,OAAO,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACpB,8FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACpB,8FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAAzB,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNX,IAAAA,KAAK,EAAE;AACNuB,MAAAA,UAAU,EAAEF;AADN;AADD,GAAP;AAKA;AAED,eAAetB,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage=\"https://static.dw.com/image/45716657_303.jpg\"\r\n\t\t\ttitle=\"A first meetup\"\r\n\t\t\tdescription=\"First Meetup\"\r\n\t\t\taddress=\"11 avenue, Prague, Chech Republic\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection(\"meetups\");\r\n\r\n\tconst selectedMeetup = await meetupCollection.findOne({ _id: meetupId });\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\2_Study\\\\3_JS\\\\5_Schwarzmuller\\\\5_nextjs_meetups\\\\pages\\\\[meetupId]\\\\index.jsx\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/2_Study/3_JS/5_Schwarzmuller/5_nextjs_meetups/pages/[meetupId]/index.jsx"],"names":["MongoClient","ObjectId","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAF3B;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAQC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADzB;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAH/B;AAIC,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAJ3B;AAAA;AAAA;AAAA;AAAA,YARD;AAAA,kBADD;AAiBA,CAlBD;;AAoBA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,8FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,8FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AACrDb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AADwC,GAAzB,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNhB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACX2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADO;AAEXrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFX;AAGXE,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAHX;AAIXC,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAJb;AAKXF,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALjB;AADN;AADD,GAAP;AAWA;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.meetupData.title}</title>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent={props.meetupData.description}\r\n\t\t\t\t/>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\t\t\timage={props.meetupData.image}\r\n\t\t\t\ttitle={props.meetupData.title}\r\n\t\t\t\tdescription={props.meetupData.description}\r\n\t\t\t\taddress={props.meetupData.address}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://brainstorm:0909@cluster0.mc7uz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection(\"meetups\");\r\n\r\n\tconst selectedMeetup = await meetupCollection.findOne({\r\n\t\t_id: ObjectId(meetupId),\r\n\t});\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t\ttitle: selectedMeetup.title,\r\n\t\t\t\timage: selectedMeetup.image,\r\n\t\t\t\taddress: selectedMeetup.address,\r\n\t\t\t\tdescription: selectedMeetup.description,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}